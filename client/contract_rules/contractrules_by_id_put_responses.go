// Code generated by go-swagger; DO NOT EDIT.

package contract_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// ContractrulesByIDPutReader is a Reader for the ContractrulesByIDPut structure.
type ContractrulesByIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractrulesByIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContractrulesByIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewContractrulesByIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContractrulesByIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContractrulesByIDPutOK creates a ContractrulesByIDPutOK with default headers values
func NewContractrulesByIDPutOK() *ContractrulesByIDPutOK {
	return &ContractrulesByIDPutOK{}
}

/*ContractrulesByIDPutOK handles this case with default header values.

Success
*/
type ContractrulesByIDPutOK struct {
	Payload *models.ContractRulesRuleViewModel
}

func (o *ContractrulesByIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{id}][%d] contractrulesByIdPutOK  %+v", 200, o.Payload)
}

func (o *ContractrulesByIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractRulesRuleViewModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractrulesByIDPutUnauthorized creates a ContractrulesByIDPutUnauthorized with default headers values
func NewContractrulesByIDPutUnauthorized() *ContractrulesByIDPutUnauthorized {
	return &ContractrulesByIDPutUnauthorized{}
}

/*ContractrulesByIDPutUnauthorized handles this case with default header values.

Unauthorized
*/
type ContractrulesByIDPutUnauthorized struct {
}

func (o *ContractrulesByIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{id}][%d] contractrulesByIdPutUnauthorized ", 401)
}

func (o *ContractrulesByIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContractrulesByIDPutNotFound creates a ContractrulesByIDPutNotFound with default headers values
func NewContractrulesByIDPutNotFound() *ContractrulesByIDPutNotFound {
	return &ContractrulesByIDPutNotFound{}
}

/*ContractrulesByIDPutNotFound handles this case with default header values.

Not Found
*/
type ContractrulesByIDPutNotFound struct {
}

func (o *ContractrulesByIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{id}][%d] contractrulesByIdPutNotFound ", 404)
}

func (o *ContractrulesByIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
