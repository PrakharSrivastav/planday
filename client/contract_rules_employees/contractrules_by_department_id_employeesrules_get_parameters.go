// Code generated by go-swagger; DO NOT EDIT.

package contract_rules_employees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewContractrulesByDepartmentIDEmployeesrulesGetParams creates a new ContractrulesByDepartmentIDEmployeesrulesGetParams object
// with the default values initialized.
func NewContractrulesByDepartmentIDEmployeesrulesGetParams() *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	var ()
	return &ContractrulesByDepartmentIDEmployeesrulesGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithTimeout creates a new ContractrulesByDepartmentIDEmployeesrulesGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithTimeout(timeout time.Duration) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	var ()
	return &ContractrulesByDepartmentIDEmployeesrulesGetParams{

		timeout: timeout,
	}
}

// NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithContext creates a new ContractrulesByDepartmentIDEmployeesrulesGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithContext(ctx context.Context) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	var ()
	return &ContractrulesByDepartmentIDEmployeesrulesGetParams{

		Context: ctx,
	}
}

// NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithHTTPClient creates a new ContractrulesByDepartmentIDEmployeesrulesGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewContractrulesByDepartmentIDEmployeesrulesGetParamsWithHTTPClient(client *http.Client) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	var ()
	return &ContractrulesByDepartmentIDEmployeesrulesGetParams{
		HTTPClient: client,
	}
}

/*ContractrulesByDepartmentIDEmployeesrulesGetParams contains all the parameters to send to the API endpoint
for the contractrules by department Id employeesrules get operation typically these are written to a http.Request
*/
type ContractrulesByDepartmentIDEmployeesrulesGetParams struct {

	/*DepartmentID*/
	DepartmentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) WithTimeout(timeout time.Duration) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) WithContext(ctx context.Context) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) WithHTTPClient(client *http.Client) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepartmentID adds the departmentID to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) WithDepartmentID(departmentID int64) *ContractrulesByDepartmentIDEmployeesrulesGetParams {
	o.SetDepartmentID(departmentID)
	return o
}

// SetDepartmentID adds the departmentId to the contractrules by department Id employeesrules get params
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) SetDepartmentID(departmentID int64) {
	o.DepartmentID = departmentID
}

// WriteToRequest writes these params to a swagger request
func (o *ContractrulesByDepartmentIDEmployeesrulesGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param departmentId
	if err := r.SetPathParam("departmentId", swag.FormatInt64(o.DepartmentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
