// Code generated by go-swagger; DO NOT EDIT.

package contract_rules_intervals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// ContractrulesByRuleIDIntervalsByIntervalIDPutReader is a Reader for the ContractrulesByRuleIDIntervalsByIntervalIDPut structure.
type ContractrulesByRuleIDIntervalsByIntervalIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContractrulesByRuleIDIntervalsByIntervalIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContractrulesByRuleIDIntervalsByIntervalIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContractrulesByRuleIDIntervalsByIntervalIDPutOK creates a ContractrulesByRuleIDIntervalsByIntervalIDPutOK with default headers values
func NewContractrulesByRuleIDIntervalsByIntervalIDPutOK() *ContractrulesByRuleIDIntervalsByIntervalIDPutOK {
	return &ContractrulesByRuleIDIntervalsByIntervalIDPutOK{}
}

/*ContractrulesByRuleIDIntervalsByIntervalIDPutOK handles this case with default header values.

Success
*/
type ContractrulesByRuleIDIntervalsByIntervalIDPutOK struct {
	Payload *models.ContractRulesIntervalViewModel
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{ruleId}/intervals/{intervalId}][%d] contractrulesByRuleIdIntervalsByIntervalIdPutOK  %+v", 200, o.Payload)
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractRulesIntervalViewModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized creates a ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized with default headers values
func NewContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized() *ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized {
	return &ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized{}
}

/*ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized handles this case with default header values.

Unauthorized
*/
type ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized struct {
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{ruleId}/intervals/{intervalId}][%d] contractrulesByRuleIdIntervalsByIntervalIdPutUnauthorized ", 401)
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContractrulesByRuleIDIntervalsByIntervalIDPutNotFound creates a ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound with default headers values
func NewContractrulesByRuleIDIntervalsByIntervalIDPutNotFound() *ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound {
	return &ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound{}
}

/*ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound handles this case with default header values.

Not Found
*/
type ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound struct {
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /contractrules/{ruleId}/intervals/{intervalId}][%d] contractrulesByRuleIdIntervalsByIntervalIdPutNotFound ", 404)
}

func (o *ContractrulesByRuleIDIntervalsByIntervalIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
