// Code generated by go-swagger; DO NOT EDIT.

package contract_rules_intervals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// ContractrulesByRuleIDIntervalsGetReader is a Reader for the ContractrulesByRuleIDIntervalsGet structure.
type ContractrulesByRuleIDIntervalsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractrulesByRuleIDIntervalsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContractrulesByRuleIDIntervalsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewContractrulesByRuleIDIntervalsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContractrulesByRuleIDIntervalsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContractrulesByRuleIDIntervalsGetOK creates a ContractrulesByRuleIDIntervalsGetOK with default headers values
func NewContractrulesByRuleIDIntervalsGetOK() *ContractrulesByRuleIDIntervalsGetOK {
	return &ContractrulesByRuleIDIntervalsGetOK{}
}

/*ContractrulesByRuleIDIntervalsGetOK handles this case with default header values.

Success
*/
type ContractrulesByRuleIDIntervalsGetOK struct {
	Payload []*models.ContractRulesIntervalViewModel
}

func (o *ContractrulesByRuleIDIntervalsGetOK) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsGetOK  %+v", 200, o.Payload)
}

func (o *ContractrulesByRuleIDIntervalsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractrulesByRuleIDIntervalsGetUnauthorized creates a ContractrulesByRuleIDIntervalsGetUnauthorized with default headers values
func NewContractrulesByRuleIDIntervalsGetUnauthorized() *ContractrulesByRuleIDIntervalsGetUnauthorized {
	return &ContractrulesByRuleIDIntervalsGetUnauthorized{}
}

/*ContractrulesByRuleIDIntervalsGetUnauthorized handles this case with default header values.

Unauthorized
*/
type ContractrulesByRuleIDIntervalsGetUnauthorized struct {
}

func (o *ContractrulesByRuleIDIntervalsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsGetUnauthorized ", 401)
}

func (o *ContractrulesByRuleIDIntervalsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContractrulesByRuleIDIntervalsGetNotFound creates a ContractrulesByRuleIDIntervalsGetNotFound with default headers values
func NewContractrulesByRuleIDIntervalsGetNotFound() *ContractrulesByRuleIDIntervalsGetNotFound {
	return &ContractrulesByRuleIDIntervalsGetNotFound{}
}

/*ContractrulesByRuleIDIntervalsGetNotFound handles this case with default header values.

Not Found
*/
type ContractrulesByRuleIDIntervalsGetNotFound struct {
}

func (o *ContractrulesByRuleIDIntervalsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsGetNotFound ", 404)
}

func (o *ContractrulesByRuleIDIntervalsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
