// Code generated by go-swagger; DO NOT EDIT.

package contract_rules_intervals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// ContractrulesByRuleIDIntervalsPostReader is a Reader for the ContractrulesByRuleIDIntervalsPost structure.
type ContractrulesByRuleIDIntervalsPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractrulesByRuleIDIntervalsPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContractrulesByRuleIDIntervalsPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewContractrulesByRuleIDIntervalsPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContractrulesByRuleIDIntervalsPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContractrulesByRuleIDIntervalsPostOK creates a ContractrulesByRuleIDIntervalsPostOK with default headers values
func NewContractrulesByRuleIDIntervalsPostOK() *ContractrulesByRuleIDIntervalsPostOK {
	return &ContractrulesByRuleIDIntervalsPostOK{}
}

/*ContractrulesByRuleIDIntervalsPostOK handles this case with default header values.

Success
*/
type ContractrulesByRuleIDIntervalsPostOK struct {
	Payload *models.ContractRulesIntervalViewModel
}

func (o *ContractrulesByRuleIDIntervalsPostOK) Error() string {
	return fmt.Sprintf("[POST /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsPostOK  %+v", 200, o.Payload)
}

func (o *ContractrulesByRuleIDIntervalsPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractRulesIntervalViewModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractrulesByRuleIDIntervalsPostUnauthorized creates a ContractrulesByRuleIDIntervalsPostUnauthorized with default headers values
func NewContractrulesByRuleIDIntervalsPostUnauthorized() *ContractrulesByRuleIDIntervalsPostUnauthorized {
	return &ContractrulesByRuleIDIntervalsPostUnauthorized{}
}

/*ContractrulesByRuleIDIntervalsPostUnauthorized handles this case with default header values.

Unauthorized
*/
type ContractrulesByRuleIDIntervalsPostUnauthorized struct {
}

func (o *ContractrulesByRuleIDIntervalsPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsPostUnauthorized ", 401)
}

func (o *ContractrulesByRuleIDIntervalsPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContractrulesByRuleIDIntervalsPostNotFound creates a ContractrulesByRuleIDIntervalsPostNotFound with default headers values
func NewContractrulesByRuleIDIntervalsPostNotFound() *ContractrulesByRuleIDIntervalsPostNotFound {
	return &ContractrulesByRuleIDIntervalsPostNotFound{}
}

/*ContractrulesByRuleIDIntervalsPostNotFound handles this case with default header values.

Not Found
*/
type ContractrulesByRuleIDIntervalsPostNotFound struct {
}

func (o *ContractrulesByRuleIDIntervalsPostNotFound) Error() string {
	return fmt.Sprintf("[POST /contractrules/{ruleId}/intervals][%d] contractrulesByRuleIdIntervalsPostNotFound ", 404)
}

func (o *ContractrulesByRuleIDIntervalsPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
