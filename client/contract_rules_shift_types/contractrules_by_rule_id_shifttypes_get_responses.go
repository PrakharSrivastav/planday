// Code generated by go-swagger; DO NOT EDIT.

package contract_rules_shift_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// ContractrulesByRuleIDShifttypesGetReader is a Reader for the ContractrulesByRuleIDShifttypesGet structure.
type ContractrulesByRuleIDShifttypesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractrulesByRuleIDShifttypesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContractrulesByRuleIDShifttypesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewContractrulesByRuleIDShifttypesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContractrulesByRuleIDShifttypesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContractrulesByRuleIDShifttypesGetOK creates a ContractrulesByRuleIDShifttypesGetOK with default headers values
func NewContractrulesByRuleIDShifttypesGetOK() *ContractrulesByRuleIDShifttypesGetOK {
	return &ContractrulesByRuleIDShifttypesGetOK{}
}

/*ContractrulesByRuleIDShifttypesGetOK handles this case with default header values.

Success
*/
type ContractrulesByRuleIDShifttypesGetOK struct {
	Payload *models.ContractRulesShiftTypeResultViewModel
}

func (o *ContractrulesByRuleIDShifttypesGetOK) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/shifttypes][%d] contractrulesByRuleIdShifttypesGetOK  %+v", 200, o.Payload)
}

func (o *ContractrulesByRuleIDShifttypesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractRulesShiftTypeResultViewModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractrulesByRuleIDShifttypesGetUnauthorized creates a ContractrulesByRuleIDShifttypesGetUnauthorized with default headers values
func NewContractrulesByRuleIDShifttypesGetUnauthorized() *ContractrulesByRuleIDShifttypesGetUnauthorized {
	return &ContractrulesByRuleIDShifttypesGetUnauthorized{}
}

/*ContractrulesByRuleIDShifttypesGetUnauthorized handles this case with default header values.

Unauthorized
*/
type ContractrulesByRuleIDShifttypesGetUnauthorized struct {
}

func (o *ContractrulesByRuleIDShifttypesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/shifttypes][%d] contractrulesByRuleIdShifttypesGetUnauthorized ", 401)
}

func (o *ContractrulesByRuleIDShifttypesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContractrulesByRuleIDShifttypesGetNotFound creates a ContractrulesByRuleIDShifttypesGetNotFound with default headers values
func NewContractrulesByRuleIDShifttypesGetNotFound() *ContractrulesByRuleIDShifttypesGetNotFound {
	return &ContractrulesByRuleIDShifttypesGetNotFound{}
}

/*ContractrulesByRuleIDShifttypesGetNotFound handles this case with default header values.

Not Found
*/
type ContractrulesByRuleIDShifttypesGetNotFound struct {
}

func (o *ContractrulesByRuleIDShifttypesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /contractrules/{ruleId}/shifttypes][%d] contractrulesByRuleIdShifttypesGetNotFound ", 404)
}

func (o *ContractrulesByRuleIDShifttypesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
