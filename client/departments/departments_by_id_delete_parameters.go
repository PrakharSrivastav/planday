// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDepartmentsByIDDeleteParams creates a new DepartmentsByIDDeleteParams object
// with the default values initialized.
func NewDepartmentsByIDDeleteParams() *DepartmentsByIDDeleteParams {
	var (
		removeEmployeesDefault = bool(false)
	)
	return &DepartmentsByIDDeleteParams{
		RemoveEmployees: &removeEmployeesDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDepartmentsByIDDeleteParamsWithTimeout creates a new DepartmentsByIDDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDepartmentsByIDDeleteParamsWithTimeout(timeout time.Duration) *DepartmentsByIDDeleteParams {
	var (
		removeEmployeesDefault = bool(false)
	)
	return &DepartmentsByIDDeleteParams{
		RemoveEmployees: &removeEmployeesDefault,

		timeout: timeout,
	}
}

// NewDepartmentsByIDDeleteParamsWithContext creates a new DepartmentsByIDDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewDepartmentsByIDDeleteParamsWithContext(ctx context.Context) *DepartmentsByIDDeleteParams {
	var (
		removeEmployeesDefault = bool(false)
	)
	return &DepartmentsByIDDeleteParams{
		RemoveEmployees: &removeEmployeesDefault,

		Context: ctx,
	}
}

// NewDepartmentsByIDDeleteParamsWithHTTPClient creates a new DepartmentsByIDDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDepartmentsByIDDeleteParamsWithHTTPClient(client *http.Client) *DepartmentsByIDDeleteParams {
	var (
		removeEmployeesDefault = bool(false)
	)
	return &DepartmentsByIDDeleteParams{
		RemoveEmployees: &removeEmployeesDefault,
		HTTPClient:      client,
	}
}

/*DepartmentsByIDDeleteParams contains all the parameters to send to the API endpoint
for the departments by Id delete operation typically these are written to a http.Request
*/
type DepartmentsByIDDeleteParams struct {

	/*ID*/
	ID int64
	/*RemoveEmployees*/
	RemoveEmployees *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) WithTimeout(timeout time.Duration) *DepartmentsByIDDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) WithContext(ctx context.Context) *DepartmentsByIDDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) WithHTTPClient(client *http.Client) *DepartmentsByIDDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) WithID(id int64) *DepartmentsByIDDeleteParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) SetID(id int64) {
	o.ID = id
}

// WithRemoveEmployees adds the removeEmployees to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) WithRemoveEmployees(removeEmployees *bool) *DepartmentsByIDDeleteParams {
	o.SetRemoveEmployees(removeEmployees)
	return o
}

// SetRemoveEmployees adds the removeEmployees to the departments by Id delete params
func (o *DepartmentsByIDDeleteParams) SetRemoveEmployees(removeEmployees *bool) {
	o.RemoveEmployees = removeEmployees
}

// WriteToRequest writes these params to a swagger request
func (o *DepartmentsByIDDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.RemoveEmployees != nil {

		// query param remove_employees
		var qrRemoveEmployees bool
		if o.RemoveEmployees != nil {
			qrRemoveEmployees = *o.RemoveEmployees
		}
		qRemoveEmployees := swag.FormatBool(qrRemoveEmployees)
		if qRemoveEmployees != "" {
			if err := r.SetQueryParam("remove_employees", qRemoveEmployees); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
