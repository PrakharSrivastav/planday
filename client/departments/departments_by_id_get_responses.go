// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// DepartmentsByIDGetReader is a Reader for the DepartmentsByIDGet structure.
type DepartmentsByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DepartmentsByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDepartmentsByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDepartmentsByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDepartmentsByIDGetOK creates a DepartmentsByIDGetOK with default headers values
func NewDepartmentsByIDGetOK() *DepartmentsByIDGetOK {
	return &DepartmentsByIDGetOK{}
}

/*DepartmentsByIDGetOK handles this case with default header values.

Success
*/
type DepartmentsByIDGetOK struct {
	Payload *models.DepartmentViewModelExtended
}

func (o *DepartmentsByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /departments/{id}][%d] departmentsByIdGetOK  %+v", 200, o.Payload)
}

func (o *DepartmentsByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DepartmentViewModelExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDepartmentsByIDGetUnauthorized creates a DepartmentsByIDGetUnauthorized with default headers values
func NewDepartmentsByIDGetUnauthorized() *DepartmentsByIDGetUnauthorized {
	return &DepartmentsByIDGetUnauthorized{}
}

/*DepartmentsByIDGetUnauthorized handles this case with default header values.

Unauthorized
*/
type DepartmentsByIDGetUnauthorized struct {
}

func (o *DepartmentsByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /departments/{id}][%d] departmentsByIdGetUnauthorized ", 401)
}

func (o *DepartmentsByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
