// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDepartmentsGetParams creates a new DepartmentsGetParams object
// with the default values initialized.
func NewDepartmentsGetParams() *DepartmentsGetParams {
	var (
		includeDeletedDefault = bool(false)
		orderDefault          = string("Ascending")
		orderByDefault        = string("")
		presetIDDefault       = string("")
		searchQueryDefault    = string("")
	)
	return &DepartmentsGetParams{
		IncludeDeleted: &includeDeletedDefault,
		Order:          &orderDefault,
		OrderBy:        &orderByDefault,
		PresetID:       &presetIDDefault,
		SearchQuery:    &searchQueryDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDepartmentsGetParamsWithTimeout creates a new DepartmentsGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDepartmentsGetParamsWithTimeout(timeout time.Duration) *DepartmentsGetParams {
	var (
		includeDeletedDefault = bool(false)
		orderDefault          = string("Ascending")
		orderByDefault        = string("")
		presetIDDefault       = string("")
		searchQueryDefault    = string("")
	)
	return &DepartmentsGetParams{
		IncludeDeleted: &includeDeletedDefault,
		Order:          &orderDefault,
		OrderBy:        &orderByDefault,
		PresetID:       &presetIDDefault,
		SearchQuery:    &searchQueryDefault,

		timeout: timeout,
	}
}

// NewDepartmentsGetParamsWithContext creates a new DepartmentsGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewDepartmentsGetParamsWithContext(ctx context.Context) *DepartmentsGetParams {
	var (
		includeDeletedDefault = bool(false)
		orderDefault          = string("Ascending")
		orderByDefault        = string("")
		presetIdDefault       = string("")
		searchQueryDefault    = string("")
	)
	return &DepartmentsGetParams{
		IncludeDeleted: &includeDeletedDefault,
		Order:          &orderDefault,
		OrderBy:        &orderByDefault,
		PresetID:       &presetIdDefault,
		SearchQuery:    &searchQueryDefault,

		Context: ctx,
	}
}

// NewDepartmentsGetParamsWithHTTPClient creates a new DepartmentsGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDepartmentsGetParamsWithHTTPClient(client *http.Client) *DepartmentsGetParams {
	var (
		includeDeletedDefault = bool(false)
		orderDefault          = string("Ascending")
		orderByDefault        = string("")
		presetIdDefault       = string("")
		searchQueryDefault    = string("")
	)
	return &DepartmentsGetParams{
		IncludeDeleted: &includeDeletedDefault,
		Order:          &orderDefault,
		OrderBy:        &orderByDefault,
		PresetID:       &presetIdDefault,
		SearchQuery:    &searchQueryDefault,
		HTTPClient:     client,
	}
}

/*DepartmentsGetParams contains all the parameters to send to the API endpoint
for the departments get operation typically these are written to a http.Request
*/
type DepartmentsGetParams struct {

	/*IncludeDeleted*/
	IncludeDeleted *bool
	/*Limit*/
	Limit *int32
	/*Offset*/
	Offset *int32
	/*Order*/
	Order *string
	/*OrderBy*/
	OrderBy *string
	/*PresetID*/
	PresetID *string
	/*SearchQuery*/
	SearchQuery *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the departments get params
func (o *DepartmentsGetParams) WithTimeout(timeout time.Duration) *DepartmentsGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the departments get params
func (o *DepartmentsGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the departments get params
func (o *DepartmentsGetParams) WithContext(ctx context.Context) *DepartmentsGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the departments get params
func (o *DepartmentsGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the departments get params
func (o *DepartmentsGetParams) WithHTTPClient(client *http.Client) *DepartmentsGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the departments get params
func (o *DepartmentsGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeDeleted adds the includeDeleted to the departments get params
func (o *DepartmentsGetParams) WithIncludeDeleted(includeDeleted *bool) *DepartmentsGetParams {
	o.SetIncludeDeleted(includeDeleted)
	return o
}

// SetIncludeDeleted adds the includeDeleted to the departments get params
func (o *DepartmentsGetParams) SetIncludeDeleted(includeDeleted *bool) {
	o.IncludeDeleted = includeDeleted
}

// WithLimit adds the limit to the departments get params
func (o *DepartmentsGetParams) WithLimit(limit *int32) *DepartmentsGetParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the departments get params
func (o *DepartmentsGetParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithOffset adds the offset to the departments get params
func (o *DepartmentsGetParams) WithOffset(offset *int32) *DepartmentsGetParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the departments get params
func (o *DepartmentsGetParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithOrder adds the order to the departments get params
func (o *DepartmentsGetParams) WithOrder(order *string) *DepartmentsGetParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the departments get params
func (o *DepartmentsGetParams) SetOrder(order *string) {
	o.Order = order
}

// WithOrderBy adds the orderBy to the departments get params
func (o *DepartmentsGetParams) WithOrderBy(orderBy *string) *DepartmentsGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the departments get params
func (o *DepartmentsGetParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPresetID adds the presetID to the departments get params
func (o *DepartmentsGetParams) WithPresetID(presetID *string) *DepartmentsGetParams {
	o.SetPresetID(presetID)
	return o
}

// SetPresetID adds the presetId to the departments get params
func (o *DepartmentsGetParams) SetPresetID(presetID *string) {
	o.PresetID = presetID
}

// WithSearchQuery adds the searchQuery to the departments get params
func (o *DepartmentsGetParams) WithSearchQuery(searchQuery *string) *DepartmentsGetParams {
	o.SetSearchQuery(searchQuery)
	return o
}

// SetSearchQuery adds the searchQuery to the departments get params
func (o *DepartmentsGetParams) SetSearchQuery(searchQuery *string) {
	o.SearchQuery = searchQuery
}

// WriteToRequest writes these params to a swagger request
func (o *DepartmentsGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeDeleted != nil {

		// query param include_deleted
		var qrIncludeDeleted bool
		if o.IncludeDeleted != nil {
			qrIncludeDeleted = *o.IncludeDeleted
		}
		qIncludeDeleted := swag.FormatBool(qrIncludeDeleted)
		if qIncludeDeleted != "" {
			if err := r.SetQueryParam("include_deleted", qIncludeDeleted); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Order != nil {

		// query param order
		var qrOrder string
		if o.Order != nil {
			qrOrder = *o.Order
		}
		qOrder := qrOrder
		if qOrder != "" {
			if err := r.SetQueryParam("order", qOrder); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.PresetID != nil {

		// query param preset_id
		var qrPresetID string
		if o.PresetID != nil {
			qrPresetID = *o.PresetID
		}
		qPresetID := qrPresetID
		if qPresetID != "" {
			if err := r.SetQueryParam("preset_id", qPresetID); err != nil {
				return err
			}
		}

	}

	if o.SearchQuery != nil {

		// query param search_query
		var qrSearchQuery string
		if o.SearchQuery != nil {
			qrSearchQuery = *o.SearchQuery
		}
		qSearchQuery := qrSearchQuery
		if qSearchQuery != "" {
			if err := r.SetQueryParam("search_query", qSearchQuery); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
