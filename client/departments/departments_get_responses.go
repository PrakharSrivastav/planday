// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// DepartmentsGetReader is a Reader for the DepartmentsGet structure.
type DepartmentsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DepartmentsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDepartmentsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDepartmentsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDepartmentsGetOK creates a DepartmentsGetOK with default headers values
func NewDepartmentsGetOK() *DepartmentsGetOK {
	return &DepartmentsGetOK{}
}

/*DepartmentsGetOK handles this case with default header values.

Success
*/
type DepartmentsGetOK struct {
	Payload *models.QueryResultDepartmentListViewItemExtended
}

func (o *DepartmentsGetOK) Error() string {
	return fmt.Sprintf("[GET /departments][%d] departmentsGetOK  %+v", 200, o.Payload)
}

func (o *DepartmentsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueryResultDepartmentListViewItemExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDepartmentsGetUnauthorized creates a DepartmentsGetUnauthorized with default headers values
func NewDepartmentsGetUnauthorized() *DepartmentsGetUnauthorized {
	return &DepartmentsGetUnauthorized{}
}

/*DepartmentsGetUnauthorized handles this case with default header values.

Unauthorized
*/
type DepartmentsGetUnauthorized struct {
}

func (o *DepartmentsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /departments][%d] departmentsGetUnauthorized ", 401)
}

func (o *DepartmentsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
