// Code generated by go-swagger; DO NOT EDIT.

package employees_activation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// NewEmployeesByIDReactivatePutParams creates a new EmployeesByIDReactivatePutParams object
// with the default values initialized.
func NewEmployeesByIDReactivatePutParams() *EmployeesByIDReactivatePutParams {
	var ()
	return &EmployeesByIDReactivatePutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEmployeesByIDReactivatePutParamsWithTimeout creates a new EmployeesByIDReactivatePutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEmployeesByIDReactivatePutParamsWithTimeout(timeout time.Duration) *EmployeesByIDReactivatePutParams {
	var ()
	return &EmployeesByIDReactivatePutParams{

		timeout: timeout,
	}
}

// NewEmployeesByIDReactivatePutParamsWithContext creates a new EmployeesByIDReactivatePutParams object
// with the default values initialized, and the ability to set a context for a request
func NewEmployeesByIDReactivatePutParamsWithContext(ctx context.Context) *EmployeesByIDReactivatePutParams {
	var ()
	return &EmployeesByIDReactivatePutParams{

		Context: ctx,
	}
}

// NewEmployeesByIDReactivatePutParamsWithHTTPClient creates a new EmployeesByIDReactivatePutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEmployeesByIDReactivatePutParamsWithHTTPClient(client *http.Client) *EmployeesByIDReactivatePutParams {
	var ()
	return &EmployeesByIDReactivatePutParams{
		HTTPClient: client,
	}
}

/*EmployeesByIDReactivatePutParams contains all the parameters to send to the API endpoint
for the employees by Id reactivate put operation typically these are written to a http.Request
*/
type EmployeesByIDReactivatePutParams struct {

	/*Employee*/
	Employee *models.ReactivateEmployeeViewModel
	/*ID*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) WithTimeout(timeout time.Duration) *EmployeesByIDReactivatePutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) WithContext(ctx context.Context) *EmployeesByIDReactivatePutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) WithHTTPClient(client *http.Client) *EmployeesByIDReactivatePutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmployee adds the employee to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) WithEmployee(employee *models.ReactivateEmployeeViewModel) *EmployeesByIDReactivatePutParams {
	o.SetEmployee(employee)
	return o
}

// SetEmployee adds the employee to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) SetEmployee(employee *models.ReactivateEmployeeViewModel) {
	o.Employee = employee
}

// WithID adds the id to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) WithID(id int64) *EmployeesByIDReactivatePutParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the employees by Id reactivate put params
func (o *EmployeesByIDReactivatePutParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *EmployeesByIDReactivatePutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Employee != nil {
		if err := r.SetBodyParam(o.Employee); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
