// Code generated by go-swagger; DO NOT EDIT.

package employees_gdpr

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewEmployeesByIDResetGdprPasswordPutParams creates a new EmployeesByIDResetGdprPasswordPutParams object
// with the default values initialized.
func NewEmployeesByIDResetGdprPasswordPutParams() *EmployeesByIDResetGdprPasswordPutParams {
	var ()
	return &EmployeesByIDResetGdprPasswordPutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEmployeesByIDResetGdprPasswordPutParamsWithTimeout creates a new EmployeesByIDResetGdprPasswordPutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEmployeesByIDResetGdprPasswordPutParamsWithTimeout(timeout time.Duration) *EmployeesByIDResetGdprPasswordPutParams {
	var ()
	return &EmployeesByIDResetGdprPasswordPutParams{

		timeout: timeout,
	}
}

// NewEmployeesByIDResetGdprPasswordPutParamsWithContext creates a new EmployeesByIDResetGdprPasswordPutParams object
// with the default values initialized, and the ability to set a context for a request
func NewEmployeesByIDResetGdprPasswordPutParamsWithContext(ctx context.Context) *EmployeesByIDResetGdprPasswordPutParams {
	var ()
	return &EmployeesByIDResetGdprPasswordPutParams{

		Context: ctx,
	}
}

// NewEmployeesByIDResetGdprPasswordPutParamsWithHTTPClient creates a new EmployeesByIDResetGdprPasswordPutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEmployeesByIDResetGdprPasswordPutParamsWithHTTPClient(client *http.Client) *EmployeesByIDResetGdprPasswordPutParams {
	var ()
	return &EmployeesByIDResetGdprPasswordPutParams{
		HTTPClient: client,
	}
}

/*EmployeesByIDResetGdprPasswordPutParams contains all the parameters to send to the API endpoint
for the employees by Id reset gdpr password put operation typically these are written to a http.Request
*/
type EmployeesByIDResetGdprPasswordPutParams struct {

	/*ID
	  The id of employee to reset password

	*/
	ID int64
	/*SendMail*/
	SendMail *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) WithTimeout(timeout time.Duration) *EmployeesByIDResetGdprPasswordPutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) WithContext(ctx context.Context) *EmployeesByIDResetGdprPasswordPutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) WithHTTPClient(client *http.Client) *EmployeesByIDResetGdprPasswordPutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) WithID(id int64) *EmployeesByIDResetGdprPasswordPutParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) SetID(id int64) {
	o.ID = id
}

// WithSendMail adds the sendMail to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) WithSendMail(sendMail *bool) *EmployeesByIDResetGdprPasswordPutParams {
	o.SetSendMail(sendMail)
	return o
}

// SetSendMail adds the sendMail to the employees by Id reset gdpr password put params
func (o *EmployeesByIDResetGdprPasswordPutParams) SetSendMail(sendMail *bool) {
	o.SendMail = sendMail
}

// WriteToRequest writes these params to a swagger request
func (o *EmployeesByIDResetGdprPasswordPutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.SendMail != nil {

		// query param send_mail
		var qrSendMail bool
		if o.SendMail != nil {
			qrSendMail = *o.SendMail
		}
		qSendMail := swag.FormatBool(qrSendMail)
		if qSendMail != "" {
			if err := r.SetQueryParam("send_mail", qSendMail); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
