// Code generated by go-swagger; DO NOT EDIT.

package employees_gdpr

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// NewEmployeesForgetPostParams creates a new EmployeesForgetPostParams object
// with the default values initialized.
func NewEmployeesForgetPostParams() *EmployeesForgetPostParams {
	var ()
	return &EmployeesForgetPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEmployeesForgetPostParamsWithTimeout creates a new EmployeesForgetPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEmployeesForgetPostParamsWithTimeout(timeout time.Duration) *EmployeesForgetPostParams {
	var ()
	return &EmployeesForgetPostParams{

		timeout: timeout,
	}
}

// NewEmployeesForgetPostParamsWithContext creates a new EmployeesForgetPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewEmployeesForgetPostParamsWithContext(ctx context.Context) *EmployeesForgetPostParams {
	var ()
	return &EmployeesForgetPostParams{

		Context: ctx,
	}
}

// NewEmployeesForgetPostParamsWithHTTPClient creates a new EmployeesForgetPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEmployeesForgetPostParamsWithHTTPClient(client *http.Client) *EmployeesForgetPostParams {
	var ()
	return &EmployeesForgetPostParams{
		HTTPClient: client,
	}
}

/*EmployeesForgetPostParams contains all the parameters to send to the API endpoint
for the employees forget post operation typically these are written to a http.Request
*/
type EmployeesForgetPostParams struct {

	/*Ids*/
	Ids *models.EmployeesToForget

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the employees forget post params
func (o *EmployeesForgetPostParams) WithTimeout(timeout time.Duration) *EmployeesForgetPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the employees forget post params
func (o *EmployeesForgetPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the employees forget post params
func (o *EmployeesForgetPostParams) WithContext(ctx context.Context) *EmployeesForgetPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the employees forget post params
func (o *EmployeesForgetPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the employees forget post params
func (o *EmployeesForgetPostParams) WithHTTPClient(client *http.Client) *EmployeesForgetPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the employees forget post params
func (o *EmployeesForgetPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the employees forget post params
func (o *EmployeesForgetPostParams) WithIds(ids *models.EmployeesToForget) *EmployeesForgetPostParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the employees forget post params
func (o *EmployeesForgetPostParams) SetIds(ids *models.EmployeesToForget) {
	o.Ids = ids
}

// WriteToRequest writes these params to a swagger request
func (o *EmployeesForgetPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Ids != nil {
		if err := r.SetBodyParam(o.Ids); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
