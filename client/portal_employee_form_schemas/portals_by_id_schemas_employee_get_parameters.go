// Code generated by go-swagger; DO NOT EDIT.

package portal_employee_form_schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPortalsByIDSchemasEmployeeGetParams creates a new PortalsByIDSchemasEmployeeGetParams object
// with the default values initialized.
func NewPortalsByIDSchemasEmployeeGetParams() *PortalsByIDSchemasEmployeeGetParams {
	var ()
	return &PortalsByIDSchemasEmployeeGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPortalsByIDSchemasEmployeeGetParamsWithTimeout creates a new PortalsByIDSchemasEmployeeGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPortalsByIDSchemasEmployeeGetParamsWithTimeout(timeout time.Duration) *PortalsByIDSchemasEmployeeGetParams {
	var ()
	return &PortalsByIDSchemasEmployeeGetParams{

		timeout: timeout,
	}
}

// NewPortalsByIDSchemasEmployeeGetParamsWithContext creates a new PortalsByIDSchemasEmployeeGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewPortalsByIDSchemasEmployeeGetParamsWithContext(ctx context.Context) *PortalsByIDSchemasEmployeeGetParams {
	var ()
	return &PortalsByIDSchemasEmployeeGetParams{

		Context: ctx,
	}
}

// NewPortalsByIDSchemasEmployeeGetParamsWithHTTPClient creates a new PortalsByIDSchemasEmployeeGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPortalsByIDSchemasEmployeeGetParamsWithHTTPClient(client *http.Client) *PortalsByIDSchemasEmployeeGetParams {
	var ()
	return &PortalsByIDSchemasEmployeeGetParams{
		HTTPClient: client,
	}
}

/*PortalsByIDSchemasEmployeeGetParams contains all the parameters to send to the API endpoint
for the portals by Id schemas employee get operation typically these are written to a http.Request
*/
type PortalsByIDSchemasEmployeeGetParams struct {

	/*FormType
	  Optional: The type of Portal Form, if omitted, returns all

	*/
	FormType *string
	/*ID
	  Id of the portal to retrieve schema for

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) WithTimeout(timeout time.Duration) *PortalsByIDSchemasEmployeeGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) WithContext(ctx context.Context) *PortalsByIDSchemasEmployeeGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) WithHTTPClient(client *http.Client) *PortalsByIDSchemasEmployeeGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFormType adds the formType to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) WithFormType(formType *string) *PortalsByIDSchemasEmployeeGetParams {
	o.SetFormType(formType)
	return o
}

// SetFormType adds the formType to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) SetFormType(formType *string) {
	o.FormType = formType
}

// WithID adds the id to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) WithID(id int64) *PortalsByIDSchemasEmployeeGetParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the portals by Id schemas employee get params
func (o *PortalsByIDSchemasEmployeeGetParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PortalsByIDSchemasEmployeeGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FormType != nil {

		// query param formType
		var qrFormType string
		if o.FormType != nil {
			qrFormType = *o.FormType
		}
		qFormType := qrFormType
		if qFormType != "" {
			if err := r.SetQueryParam("formType", qFormType); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
