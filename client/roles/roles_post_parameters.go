// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/PrakharSrivastav/planday/models"
)

// NewRolesPostParams creates a new RolesPostParams object
// with the default values initialized.
func NewRolesPostParams() *RolesPostParams {
	var ()
	return &RolesPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRolesPostParamsWithTimeout creates a new RolesPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRolesPostParamsWithTimeout(timeout time.Duration) *RolesPostParams {
	var ()
	return &RolesPostParams{

		timeout: timeout,
	}
}

// NewRolesPostParamsWithContext creates a new RolesPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewRolesPostParamsWithContext(ctx context.Context) *RolesPostParams {
	var ()
	return &RolesPostParams{

		Context: ctx,
	}
}

// NewRolesPostParamsWithHTTPClient creates a new RolesPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRolesPostParamsWithHTTPClient(client *http.Client) *RolesPostParams {
	var ()
	return &RolesPostParams{
		HTTPClient: client,
	}
}

/*RolesPostParams contains all the parameters to send to the API endpoint
for the roles post operation typically these are written to a http.Request
*/
type RolesPostParams struct {

	/*RoleInputModel*/
	RoleInputModel *models.RoleInputModelExtended

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the roles post params
func (o *RolesPostParams) WithTimeout(timeout time.Duration) *RolesPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the roles post params
func (o *RolesPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the roles post params
func (o *RolesPostParams) WithContext(ctx context.Context) *RolesPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the roles post params
func (o *RolesPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the roles post params
func (o *RolesPostParams) WithHTTPClient(client *http.Client) *RolesPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the roles post params
func (o *RolesPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRoleInputModel adds the roleInputModel to the roles post params
func (o *RolesPostParams) WithRoleInputModel(roleInputModel *models.RoleInputModelExtended) *RolesPostParams {
	o.SetRoleInputModel(roleInputModel)
	return o
}

// SetRoleInputModel adds the roleInputModel to the roles post params
func (o *RolesPostParams) SetRoleInputModel(roleInputModel *models.RoleInputModelExtended) {
	o.RoleInputModel = roleInputModel
}

// WriteToRequest writes these params to a swagger request
func (o *RolesPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RoleInputModel != nil {
		if err := r.SetBodyParam(o.RoleInputModel); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
