// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Attachment attachment
// swagger:model Attachment
type Attachment struct {

	// created at
	// Read Only: true
	CreatedAt string `json:"created_at,omitempty"`

	// created by employee id
	// Read Only: true
	CreatedByEmployeeID int64 `json:"created_by_employee_id,omitempty"`

	// date created
	// Read Only: true
	// Format: date-time
	DateCreated strfmt.DateTime `json:"date_created,omitempty"`

	// description
	// Read Only: true
	Description string `json:"description,omitempty"`

	// file extension
	FileExtension string `json:"file_extension,omitempty"`

	// file name
	// Read Only: true
	FileName string `json:"file_name,omitempty"`

	// file size
	// Read Only: true
	FileSize int64 `json:"file_size,omitempty"`

	// guid
	// Read Only: true
	// Format: uuid
	GUID strfmt.UUID `json:"guid,omitempty"`

	// height
	// Read Only: true
	Height int32 `json:"height,omitempty"`

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// mime type
	// Read Only: true
	MimeType string `json:"mime_type,omitempty"`

	// portal id
	PortalID int64 `json:"portal_id,omitempty"`

	// title
	// Read Only: true
	Title string `json:"title,omitempty"`

	// width
	// Read Only: true
	Width int32 `json:"width,omitempty"`
}

// Validate validates this attachment
func (m *Attachment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Attachment) validateDateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if err := validate.FormatOf("date_created", "body", "date-time", m.DateCreated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Attachment) validateGUID(formats strfmt.Registry) error {

	if swag.IsZero(m.GUID) { // not required
		return nil
	}

	if err := validate.FormatOf("guid", "body", "uuid", m.GUID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Attachment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Attachment) UnmarshalBinary(b []byte) error {
	var res Attachment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
