// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Country country
// swagger:model Country
type Country struct {

	// culture name
	// Read Only: true
	CultureName string `json:"culture_name,omitempty"`

	// currency name
	// Read Only: true
	CurrencyName string `json:"currency_name,omitempty"`

	// currency pattern
	// Read Only: true
	CurrencyPattern string `json:"currency_pattern,omitempty"`

	// default24 hour time
	// Read Only: true
	Default24HourTime *bool `json:"default24_hour_time,omitempty"`

	// default language id
	// Read Only: true
	DefaultLanguageID int64 `json:"default_language_id,omitempty"`

	// default site id
	// Read Only: true
	DefaultSiteID int64 `json:"default_site_id,omitempty"`

	// default time zone
	// Read Only: true
	DefaultTimeZone string `json:"default_time_zone,omitempty"`

	// default time zone id
	// Read Only: true
	DefaultTimeZoneID int32 `json:"default_time_zone_id,omitempty"`

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// name
	// Read Only: true
	Name string `json:"name,omitempty"`

	// phone pattern
	// Read Only: true
	PhonePattern string `json:"phone_pattern,omitempty"`

	// phone prefix
	// Read Only: true
	PhonePrefix string `json:"phone_prefix,omitempty"`

	// s s n pattern
	// Read Only: true
	SSNPattern string `json:"s_s_n_pattern,omitempty"`

	// short name
	// Read Only: true
	ShortName string `json:"short_name,omitempty"`
}

// Validate validates this country
func (m *Country) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Country) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Country) UnmarshalBinary(b []byte) error {
	var res Country
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
