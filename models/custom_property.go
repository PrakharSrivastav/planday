// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomProperty custom property
// swagger:model CustomProperty
type CustomProperty struct {

	// allow employee edit
	AllowEmployeeEdit bool `json:"allow_employee_edit,omitempty"`

	// control data source name
	ControlDataSourceName string `json:"control_data_source_name,omitempty"`

	// control data source parameters
	ControlDataSourceParameters string `json:"control_data_source_parameters,omitempty"`

	// control type name
	ControlTypeName string `json:"control_type_name,omitempty"`

	// created at
	// Read Only: true
	CreatedAt string `json:"created_at,omitempty"`

	// created by
	// Read Only: true
	CreatedBy int64 `json:"created_by,omitempty"`

	// custom options
	CustomOptions []*CustomPropertyOption `json:"custom_options"`

	// date created
	// Read Only: true
	// Format: date-time
	DateCreated strfmt.DateTime `json:"date_created,omitempty"`

	// date deleted
	// Read Only: true
	// Format: date-time
	DateDeleted strfmt.DateTime `json:"date_deleted,omitempty"`

	// date modified
	// Read Only: true
	// Format: date-time
	DateModified strfmt.DateTime `json:"date_modified,omitempty"`

	// default binary value
	// Format: byte
	DefaultBinaryValue strfmt.Base64 `json:"default_binary_value,omitempty"`

	// deleted at
	// Read Only: true
	DeletedAt string `json:"deleted_at,omitempty"`

	// deleted by
	// Read Only: true
	DeletedBy int64 `json:"deleted_by,omitempty"`

	// format string
	FormatString string `json:"format_string,omitempty"`

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// is deleted
	// Read Only: true
	IsDeleted *bool `json:"is_deleted,omitempty"`

	// is required
	IsRequired bool `json:"is_required,omitempty"`

	// is visible to portal
	IsVisibleToPortal bool `json:"is_visible_to_portal,omitempty"`

	// last modified
	// Read Only: true
	LastModified string `json:"last_modified,omitempty"`

	// modified by
	// Read Only: true
	ModifiedBy int64 `json:"modified_by,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// portal id
	PortalID int64 `json:"portal_id,omitempty"`

	// related owner id
	RelatedOwnerID int64 `json:"related_owner_id,omitempty"`

	// schema property name
	// Read Only: true
	SchemaPropertyName string `json:"schema_property_name,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// translation name
	TranslationName string `json:"translation_name,omitempty"`

	// type
	// Enum: [Text Boolean Numeric Dropdown Date Custom Image]
	Type string `json:"type,omitempty"`

	// validation rule id
	ValidationRuleID int64 `json:"validation_rule_id,omitempty"`
}

// Validate validates this custom property
func (m *CustomProperty) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateDeleted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateModified(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultBinaryValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomProperty) validateCustomOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomOptions) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomOptions); i++ {
		if swag.IsZero(m.CustomOptions[i]) { // not required
			continue
		}

		if m.CustomOptions[i] != nil {
			if err := m.CustomOptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("custom_options" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CustomProperty) validateDateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if err := validate.FormatOf("date_created", "body", "date-time", m.DateCreated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomProperty) validateDateDeleted(formats strfmt.Registry) error {

	if swag.IsZero(m.DateDeleted) { // not required
		return nil
	}

	if err := validate.FormatOf("date_deleted", "body", "date-time", m.DateDeleted.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomProperty) validateDateModified(formats strfmt.Registry) error {

	if swag.IsZero(m.DateModified) { // not required
		return nil
	}

	if err := validate.FormatOf("date_modified", "body", "date-time", m.DateModified.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomProperty) validateDefaultBinaryValue(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultBinaryValue) { // not required
		return nil
	}

	// Format "byte" (base64 string) is already validated when unmarshalled

	return nil
}

var customPropertyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Text","Boolean","Numeric","Dropdown","Date","Custom","Image"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customPropertyTypeTypePropEnum = append(customPropertyTypeTypePropEnum, v)
	}
}

const (

	// CustomPropertyTypeText captures enum value "Text"
	CustomPropertyTypeText string = "Text"

	// CustomPropertyTypeBoolean captures enum value "Boolean"
	CustomPropertyTypeBoolean string = "Boolean"

	// CustomPropertyTypeNumeric captures enum value "Numeric"
	CustomPropertyTypeNumeric string = "Numeric"

	// CustomPropertyTypeDropdown captures enum value "Dropdown"
	CustomPropertyTypeDropdown string = "Dropdown"

	// CustomPropertyTypeDate captures enum value "Date"
	CustomPropertyTypeDate string = "Date"

	// CustomPropertyTypeCustom captures enum value "Custom"
	CustomPropertyTypeCustom string = "Custom"

	// CustomPropertyTypeImage captures enum value "Image"
	CustomPropertyTypeImage string = "Image"
)

// prop value enum
func (m *CustomProperty) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, customPropertyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CustomProperty) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomProperty) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomProperty) UnmarshalBinary(b []byte) error {
	var res CustomProperty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
