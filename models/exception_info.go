// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExceptionInfo exception info
// swagger:model ExceptionInfo
type ExceptionInfo struct {

	// domain
	Domain string `json:"domain,omitempty"`

	// eror code
	ErorCode int32 `json:"eror_code,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// status code
	// Enum: [Continue SwitchingProtocols Processing EarlyHints OK Created Accepted NonAuthoritativeInformation NoContent ResetContent PartialContent MultiStatus AlreadyReported IMUsed MultipleChoices Ambiguous MovedPermanently Moved Found Redirect SeeOther RedirectMethod NotModified UseProxy Unused TemporaryRedirect RedirectKeepVerb PermanentRedirect BadRequest Unauthorized PaymentRequired Forbidden NotFound MethodNotAllowed NotAcceptable ProxyAuthenticationRequired RequestTimeout Conflict Gone LengthRequired PreconditionFailed RequestEntityTooLarge RequestUriTooLong UnsupportedMediaType RequestedRangeNotSatisfiable ExpectationFailed MisdirectedRequest UnprocessableEntity Locked FailedDependency UpgradeRequired PreconditionRequired TooManyRequests RequestHeaderFieldsTooLarge UnavailableForLegalReasons InternalServerError NotImplemented BadGateway ServiceUnavailable GatewayTimeout HttpVersionNotSupported VariantAlsoNegotiates InsufficientStorage LoopDetected NotExtended NetworkAuthenticationRequired]
	StatusCode string `json:"status_code,omitempty"`

	// translation
	Translation string `json:"translation,omitempty"`

	// translation key
	TranslationKey string `json:"translation_key,omitempty"`
}

// Validate validates this exception info
func (m *ExceptionInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatusCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var exceptionInfoTypeStatusCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Continue","SwitchingProtocols","Processing","EarlyHints","OK","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","IMUsed","MultipleChoices","Ambiguous","MovedPermanently","Moved","Found","Redirect","SeeOther","RedirectMethod","NotModified","UseProxy","Unused","TemporaryRedirect","RedirectKeepVerb","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","RequestEntityTooLarge","RequestUriTooLong","UnsupportedMediaType","RequestedRangeNotSatisfiable","ExpectationFailed","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		exceptionInfoTypeStatusCodePropEnum = append(exceptionInfoTypeStatusCodePropEnum, v)
	}
}

const (

	// ExceptionInfoStatusCodeContinue captures enum value "Continue"
	ExceptionInfoStatusCodeContinue string = "Continue"

	// ExceptionInfoStatusCodeSwitchingProtocols captures enum value "SwitchingProtocols"
	ExceptionInfoStatusCodeSwitchingProtocols string = "SwitchingProtocols"

	// ExceptionInfoStatusCodeProcessing captures enum value "Processing"
	ExceptionInfoStatusCodeProcessing string = "Processing"

	// ExceptionInfoStatusCodeEarlyHints captures enum value "EarlyHints"
	ExceptionInfoStatusCodeEarlyHints string = "EarlyHints"

	// ExceptionInfoStatusCodeOK captures enum value "OK"
	ExceptionInfoStatusCodeOK string = "OK"

	// ExceptionInfoStatusCodeCreated captures enum value "Created"
	ExceptionInfoStatusCodeCreated string = "Created"

	// ExceptionInfoStatusCodeAccepted captures enum value "Accepted"
	ExceptionInfoStatusCodeAccepted string = "Accepted"

	// ExceptionInfoStatusCodeNonAuthoritativeInformation captures enum value "NonAuthoritativeInformation"
	ExceptionInfoStatusCodeNonAuthoritativeInformation string = "NonAuthoritativeInformation"

	// ExceptionInfoStatusCodeNoContent captures enum value "NoContent"
	ExceptionInfoStatusCodeNoContent string = "NoContent"

	// ExceptionInfoStatusCodeResetContent captures enum value "ResetContent"
	ExceptionInfoStatusCodeResetContent string = "ResetContent"

	// ExceptionInfoStatusCodePartialContent captures enum value "PartialContent"
	ExceptionInfoStatusCodePartialContent string = "PartialContent"

	// ExceptionInfoStatusCodeMultiStatus captures enum value "MultiStatus"
	ExceptionInfoStatusCodeMultiStatus string = "MultiStatus"

	// ExceptionInfoStatusCodeAlreadyReported captures enum value "AlreadyReported"
	ExceptionInfoStatusCodeAlreadyReported string = "AlreadyReported"

	// ExceptionInfoStatusCodeIMUsed captures enum value "IMUsed"
	ExceptionInfoStatusCodeIMUsed string = "IMUsed"

	// ExceptionInfoStatusCodeMultipleChoices captures enum value "MultipleChoices"
	ExceptionInfoStatusCodeMultipleChoices string = "MultipleChoices"

	// ExceptionInfoStatusCodeAmbiguous captures enum value "Ambiguous"
	ExceptionInfoStatusCodeAmbiguous string = "Ambiguous"

	// ExceptionInfoStatusCodeMovedPermanently captures enum value "MovedPermanently"
	ExceptionInfoStatusCodeMovedPermanently string = "MovedPermanently"

	// ExceptionInfoStatusCodeMoved captures enum value "Moved"
	ExceptionInfoStatusCodeMoved string = "Moved"

	// ExceptionInfoStatusCodeFound captures enum value "Found"
	ExceptionInfoStatusCodeFound string = "Found"

	// ExceptionInfoStatusCodeRedirect captures enum value "Redirect"
	ExceptionInfoStatusCodeRedirect string = "Redirect"

	// ExceptionInfoStatusCodeSeeOther captures enum value "SeeOther"
	ExceptionInfoStatusCodeSeeOther string = "SeeOther"

	// ExceptionInfoStatusCodeRedirectMethod captures enum value "RedirectMethod"
	ExceptionInfoStatusCodeRedirectMethod string = "RedirectMethod"

	// ExceptionInfoStatusCodeNotModified captures enum value "NotModified"
	ExceptionInfoStatusCodeNotModified string = "NotModified"

	// ExceptionInfoStatusCodeUseProxy captures enum value "UseProxy"
	ExceptionInfoStatusCodeUseProxy string = "UseProxy"

	// ExceptionInfoStatusCodeUnused captures enum value "Unused"
	ExceptionInfoStatusCodeUnused string = "Unused"

	// ExceptionInfoStatusCodeTemporaryRedirect captures enum value "TemporaryRedirect"
	ExceptionInfoStatusCodeTemporaryRedirect string = "TemporaryRedirect"

	// ExceptionInfoStatusCodeRedirectKeepVerb captures enum value "RedirectKeepVerb"
	ExceptionInfoStatusCodeRedirectKeepVerb string = "RedirectKeepVerb"

	// ExceptionInfoStatusCodePermanentRedirect captures enum value "PermanentRedirect"
	ExceptionInfoStatusCodePermanentRedirect string = "PermanentRedirect"

	// ExceptionInfoStatusCodeBadRequest captures enum value "BadRequest"
	ExceptionInfoStatusCodeBadRequest string = "BadRequest"

	// ExceptionInfoStatusCodeUnauthorized captures enum value "Unauthorized"
	ExceptionInfoStatusCodeUnauthorized string = "Unauthorized"

	// ExceptionInfoStatusCodePaymentRequired captures enum value "PaymentRequired"
	ExceptionInfoStatusCodePaymentRequired string = "PaymentRequired"

	// ExceptionInfoStatusCodeForbidden captures enum value "Forbidden"
	ExceptionInfoStatusCodeForbidden string = "Forbidden"

	// ExceptionInfoStatusCodeNotFound captures enum value "NotFound"
	ExceptionInfoStatusCodeNotFound string = "NotFound"

	// ExceptionInfoStatusCodeMethodNotAllowed captures enum value "MethodNotAllowed"
	ExceptionInfoStatusCodeMethodNotAllowed string = "MethodNotAllowed"

	// ExceptionInfoStatusCodeNotAcceptable captures enum value "NotAcceptable"
	ExceptionInfoStatusCodeNotAcceptable string = "NotAcceptable"

	// ExceptionInfoStatusCodeProxyAuthenticationRequired captures enum value "ProxyAuthenticationRequired"
	ExceptionInfoStatusCodeProxyAuthenticationRequired string = "ProxyAuthenticationRequired"

	// ExceptionInfoStatusCodeRequestTimeout captures enum value "RequestTimeout"
	ExceptionInfoStatusCodeRequestTimeout string = "RequestTimeout"

	// ExceptionInfoStatusCodeConflict captures enum value "Conflict"
	ExceptionInfoStatusCodeConflict string = "Conflict"

	// ExceptionInfoStatusCodeGone captures enum value "Gone"
	ExceptionInfoStatusCodeGone string = "Gone"

	// ExceptionInfoStatusCodeLengthRequired captures enum value "LengthRequired"
	ExceptionInfoStatusCodeLengthRequired string = "LengthRequired"

	// ExceptionInfoStatusCodePreconditionFailed captures enum value "PreconditionFailed"
	ExceptionInfoStatusCodePreconditionFailed string = "PreconditionFailed"

	// ExceptionInfoStatusCodeRequestEntityTooLarge captures enum value "RequestEntityTooLarge"
	ExceptionInfoStatusCodeRequestEntityTooLarge string = "RequestEntityTooLarge"

	// ExceptionInfoStatusCodeRequestURITooLong captures enum value "RequestUriTooLong"
	ExceptionInfoStatusCodeRequestURITooLong string = "RequestUriTooLong"

	// ExceptionInfoStatusCodeUnsupportedMediaType captures enum value "UnsupportedMediaType"
	ExceptionInfoStatusCodeUnsupportedMediaType string = "UnsupportedMediaType"

	// ExceptionInfoStatusCodeRequestedRangeNotSatisfiable captures enum value "RequestedRangeNotSatisfiable"
	ExceptionInfoStatusCodeRequestedRangeNotSatisfiable string = "RequestedRangeNotSatisfiable"

	// ExceptionInfoStatusCodeExpectationFailed captures enum value "ExpectationFailed"
	ExceptionInfoStatusCodeExpectationFailed string = "ExpectationFailed"

	// ExceptionInfoStatusCodeMisdirectedRequest captures enum value "MisdirectedRequest"
	ExceptionInfoStatusCodeMisdirectedRequest string = "MisdirectedRequest"

	// ExceptionInfoStatusCodeUnprocessableEntity captures enum value "UnprocessableEntity"
	ExceptionInfoStatusCodeUnprocessableEntity string = "UnprocessableEntity"

	// ExceptionInfoStatusCodeLocked captures enum value "Locked"
	ExceptionInfoStatusCodeLocked string = "Locked"

	// ExceptionInfoStatusCodeFailedDependency captures enum value "FailedDependency"
	ExceptionInfoStatusCodeFailedDependency string = "FailedDependency"

	// ExceptionInfoStatusCodeUpgradeRequired captures enum value "UpgradeRequired"
	ExceptionInfoStatusCodeUpgradeRequired string = "UpgradeRequired"

	// ExceptionInfoStatusCodePreconditionRequired captures enum value "PreconditionRequired"
	ExceptionInfoStatusCodePreconditionRequired string = "PreconditionRequired"

	// ExceptionInfoStatusCodeTooManyRequests captures enum value "TooManyRequests"
	ExceptionInfoStatusCodeTooManyRequests string = "TooManyRequests"

	// ExceptionInfoStatusCodeRequestHeaderFieldsTooLarge captures enum value "RequestHeaderFieldsTooLarge"
	ExceptionInfoStatusCodeRequestHeaderFieldsTooLarge string = "RequestHeaderFieldsTooLarge"

	// ExceptionInfoStatusCodeUnavailableForLegalReasons captures enum value "UnavailableForLegalReasons"
	ExceptionInfoStatusCodeUnavailableForLegalReasons string = "UnavailableForLegalReasons"

	// ExceptionInfoStatusCodeInternalServerError captures enum value "InternalServerError"
	ExceptionInfoStatusCodeInternalServerError string = "InternalServerError"

	// ExceptionInfoStatusCodeNotImplemented captures enum value "NotImplemented"
	ExceptionInfoStatusCodeNotImplemented string = "NotImplemented"

	// ExceptionInfoStatusCodeBadGateway captures enum value "BadGateway"
	ExceptionInfoStatusCodeBadGateway string = "BadGateway"

	// ExceptionInfoStatusCodeServiceUnavailable captures enum value "ServiceUnavailable"
	ExceptionInfoStatusCodeServiceUnavailable string = "ServiceUnavailable"

	// ExceptionInfoStatusCodeGatewayTimeout captures enum value "GatewayTimeout"
	ExceptionInfoStatusCodeGatewayTimeout string = "GatewayTimeout"

	// ExceptionInfoStatusCodeHTTPVersionNotSupported captures enum value "HttpVersionNotSupported"
	ExceptionInfoStatusCodeHTTPVersionNotSupported string = "HttpVersionNotSupported"

	// ExceptionInfoStatusCodeVariantAlsoNegotiates captures enum value "VariantAlsoNegotiates"
	ExceptionInfoStatusCodeVariantAlsoNegotiates string = "VariantAlsoNegotiates"

	// ExceptionInfoStatusCodeInsufficientStorage captures enum value "InsufficientStorage"
	ExceptionInfoStatusCodeInsufficientStorage string = "InsufficientStorage"

	// ExceptionInfoStatusCodeLoopDetected captures enum value "LoopDetected"
	ExceptionInfoStatusCodeLoopDetected string = "LoopDetected"

	// ExceptionInfoStatusCodeNotExtended captures enum value "NotExtended"
	ExceptionInfoStatusCodeNotExtended string = "NotExtended"

	// ExceptionInfoStatusCodeNetworkAuthenticationRequired captures enum value "NetworkAuthenticationRequired"
	ExceptionInfoStatusCodeNetworkAuthenticationRequired string = "NetworkAuthenticationRequired"
)

// prop value enum
func (m *ExceptionInfo) validateStatusCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, exceptionInfoTypeStatusCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExceptionInfo) validateStatusCode(formats strfmt.Registry) error {

	if swag.IsZero(m.StatusCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusCodeEnum("status_code", "body", m.StatusCode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExceptionInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExceptionInfo) UnmarshalBinary(b []byte) error {
	var res ExceptionInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
