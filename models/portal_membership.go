// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PortalMembership portal membership
// swagger:model PortalMembership
type PortalMembership struct {

	// date created
	// Format: date-time
	DateCreated strfmt.DateTime `json:"date_created,omitempty"`

	// employee id
	EmployeeID int64 `json:"employee_id,omitempty"`

	// last seen online
	// Format: date-time
	LastSeenOnline strfmt.DateTime `json:"last_seen_online,omitempty"`

	// portal id
	PortalID int64 `json:"portal_id,omitempty"`
}

// Validate validates this portal membership
func (m *PortalMembership) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastSeenOnline(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortalMembership) validateDateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if err := validate.FormatOf("date_created", "body", "date-time", m.DateCreated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PortalMembership) validateLastSeenOnline(formats strfmt.Registry) error {

	if swag.IsZero(m.LastSeenOnline) { // not required
		return nil
	}

	if err := validate.FormatOf("last_seen_online", "body", "date-time", m.LastSeenOnline.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PortalMembership) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortalMembership) UnmarshalBinary(b []byte) error {
	var res PortalMembership
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
