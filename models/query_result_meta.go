// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// QueryResultMeta query result meta
// swagger:model QueryResultMeta
type QueryResultMeta struct {

	// ext
	Ext interface{} `json:"ext,omitempty"`

	// paging
	Paging *QueryResultPaging `json:"paging,omitempty"`

	// sorting
	Sorting *QueryResultSorting `json:"sorting,omitempty"`
}

// Validate validates this query result meta
func (m *QueryResultMeta) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePaging(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSorting(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryResultMeta) validatePaging(formats strfmt.Registry) error {

	if swag.IsZero(m.Paging) { // not required
		return nil
	}

	if m.Paging != nil {
		if err := m.Paging.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("paging")
			}
			return err
		}
	}

	return nil
}

func (m *QueryResultMeta) validateSorting(formats strfmt.Registry) error {

	if swag.IsZero(m.Sorting) { // not required
		return nil
	}

	if m.Sorting != nil {
		if err := m.Sorting.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sorting")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QueryResultMeta) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryResultMeta) UnmarshalBinary(b []byte) error {
	var res QueryResultMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
