// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateDepartmentViewModel update department view model
// swagger:model UpdateDepartmentViewModel
type UpdateDepartmentViewModel struct {

	// city
	City string `json:"city,omitempty"`

	// country id
	CountryID int64 `json:"country_id,omitempty"`

	// county
	County string `json:"county,omitempty"`

	// employees
	// Unique: true
	Employees []int64 `json:"employees"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// search string
	SearchString string `json:"search_string,omitempty"`

	// street
	Street string `json:"street,omitempty"`

	// street2
	Street2 string `json:"street2,omitempty"`

	// zip
	Zip string `json:"zip,omitempty"`
}

// Validate validates this update department view model
func (m *UpdateDepartmentViewModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmployees(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateDepartmentViewModel) validateEmployees(formats strfmt.Registry) error {

	if swag.IsZero(m.Employees) { // not required
		return nil
	}

	if err := validate.UniqueItems("employees", "body", m.Employees); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateDepartmentViewModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateDepartmentViewModel) UnmarshalBinary(b []byte) error {
	var res UpdateDepartmentViewModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
