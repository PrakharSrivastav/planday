// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserProfilePortalViewModel user profile portal view model
// swagger:model UserProfilePortalViewModel
type UserProfilePortalViewModel struct {

	// country id
	CountryID int64 `json:"country_id,omitempty"`

	// country iso code
	CountryIsoCode string `json:"country_iso_code,omitempty"`

	// currency
	Currency *UserProfilePortalCurrencyViewModel `json:"currency,omitempty"`

	// employee overview properties
	EmployeeOverviewProperties []string `json:"employee_overview_properties"`

	// guid
	// Format: uuid
	GUID strfmt.UUID `json:"guid,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// locale
	Locale string `json:"locale,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// schedule
	Schedule *UserProfilePortalScheduleViewModel `json:"schedule,omitempty"`

	// sms sender name
	SmsSenderName string `json:"sms_sender_name,omitempty"`

	// use user name range
	UseUserNameRange bool `json:"use_user_name_range,omitempty"`
}

// Validate validates this user profile portal view model
func (m *UserProfilePortalViewModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSchedule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserProfilePortalViewModel) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.Currency) { // not required
		return nil
	}

	if m.Currency != nil {
		if err := m.Currency.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("currency")
			}
			return err
		}
	}

	return nil
}

func (m *UserProfilePortalViewModel) validateGUID(formats strfmt.Registry) error {

	if swag.IsZero(m.GUID) { // not required
		return nil
	}

	if err := validate.FormatOf("guid", "body", "uuid", m.GUID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UserProfilePortalViewModel) validateSchedule(formats strfmt.Registry) error {

	if swag.IsZero(m.Schedule) { // not required
		return nil
	}

	if m.Schedule != nil {
		if err := m.Schedule.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("schedule")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserProfilePortalViewModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserProfilePortalViewModel) UnmarshalBinary(b []byte) error {
	var res UserProfilePortalViewModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
